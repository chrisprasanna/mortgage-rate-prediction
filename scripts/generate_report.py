import os
import base64
import pandas as pd
from datetime import datetime
from pathlib import Path

def generate_release_report():
    # Read evaluation metrics
    metrics_df = pd.read_csv('results/evaluation_metrics.csv')
    
    # Convert images to base64 to embed them directly in HTML
    def embed_image(image_path):
        with open(image_path, 'rb') as img_file:
            return base64.b64encode(img_file.read()).decode('utf-8')
    
    # Get base64 encoded images
    plots_dir = Path('results/plots')
    actual_vs_pred = embed_image(plots_dir / 'actual_vs_predicted.png')
    residuals = embed_image(plots_dir / 'residuals.png')
    feature_importance = embed_image(plots_dir / 'feature_importance.png')
    
    # Create HTML report with embedded images
    html_content = f"""
    <html>
    <body style="font-family: Arial, sans-serif; max-width: 1200px; margin: 0 auto; padding: 20px;">
    <h1>Mortgage Rate Prediction Report</h1>
    <p>Generated on: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}</p>
    
    <h2>Model Performance Metrics</h2>
    <div style="overflow-x: auto;">
    {metrics_df.to_html(classes='dataframe', border=1)}
    </div>
    
    <h2>Visualizations</h2>
    <h3>Actual vs Predicted Values</h3>
    <img src="data:image/png;base64,{actual_vs_pred}" style="max-width: 100%; height: auto;">
    
    <h3>Residuals Analysis</h3>
    <img src="data:image/png;base64,{residuals}" style="max-width: 100%; height: auto;">
    
    <h3>Feature Importance</h3>
    <img src="data:image/png;base64,{feature_importance}" style="max-width: 100%; height: auto;">
    
    <p style="margin-top: 30px; color: #666;">
        This is an automated report generated by the mortgage rate prediction pipeline.
        <br>
        <a href="https://github.com/chrisprasanna/mortgage-rate-prediction">View Project on GitHub</a>
    </p>
    </body>
    </html>
    """
    
    # Save HTML report
    with open('release_report.html', 'w', encoding='utf-8') as f:
        f.write(html_content)

if __name__ == "__main__":
    generate_release_report()